##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "reviews"
    tags.datadoghq.com/version: "v1"
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "reviews"
        tags.datadoghq.com/version: "v1"
        admission.datadoghq.com/enabled: "true"
        app: reviews
        version: v1
      annotations:
        admission.datadoghq.com/java-lib.version: v1.12.1
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v1:1.17.0
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_AGENT_HOST
          value: datadog-agent
        - name: DD_TRACE_AGENT_PORT
          value: "8126"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DATADOG_HOST
          value: datadog-agent
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "reviews"
    tags.datadoghq.com/version: "v2"
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "reviews"
        tags.datadoghq.com/version: "v2"
        admission.datadoghq.com/enabled: "true"
        app: reviews
        version: v2
      annotations:
        admission.datadoghq.com/java-lib.version: v1.12.1
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v2:1.17.0
        imagePullPolicy: IfNotPresent
        env:
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: DD_AGENT_HOST
          value: datadog-agent
        - name: DD_TRACE_AGENT_PORT
          value: "8126"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DATADOG_HOST
          value: datadog-agent
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    tags.datadoghq.com/env: "dev"
    tags.datadoghq.com/service: "reviews"
    tags.datadoghq.com/version: "v3"
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        tags.datadoghq.com/env: "dev"
        tags.datadoghq.com/service: "reviews"
        tags.datadoghq.com/version: "v3"
        admission.datadoghq.com/enabled: "true"
        app: reviews
        version: v3
      annotations:
        admission.datadoghq.com/java-lib.version: v1.12.1
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v3:1.17.0
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: DATADOG_HOST
          value: datadog-agent
        - name: DD_AGENT_HOST
          value: datadog-agent
        - name: DD_TRACE_AGENT_PORT
          value: "8126"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext:
          runAsUser: 1000
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
