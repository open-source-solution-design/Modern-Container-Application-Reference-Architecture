apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-global-oidc-broker
  namespace: itsm
  labels:
    io.metrico.service: aws-global-oidc-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.metrico.service: aws-global-oidc-broker
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.metrico.service: aws-global-oidc-broker
    spec:
      containers:
        - name: aws-global-oidc-broker
          image: artifact.onwalk.net/public/aws-global-oidc-broker:1.2.0
          ports:
            - containerPort: 5000
          resources: {}
          env:
            - name: KEYCLOAK_CLIENT_ID
              value: "aws-oidc"
            - name: KEYCLOAK_WELLKNOWN
              value: "https://keycloak.apollo-ev.com/realms/cloud-sso/.well-known/openid-configuration"
            - name: KEYCLOAK_CLIENT_SECRET
              value: "WYyZJGUOOiwooIp700PtykmjYkrsPJPi"
            - name: TITLE
              value: "aws-oidc"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: aws-global-oidc-broker
  namespace: itsm
spec:
  ports:
    - name: "5000"
      port: 5000
      nodePort: 5000
      targetPort: 5000
  selector:
    io.metrico.service: aws-global-oidc-broker
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aws-global-oidc-broker
  namespace: itsm
spec:
  ingressClassName: nginx
  rules:
  - host: loki.apollo-ev.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aws-global-oidc-broker
            port:
              number: 5000
  tls:
  - hosts:
    - loki.apollo-ev.com
    secretName: keycloak-tls
